/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cryptomight_v2_proj;

/**
 *
 * @author garrenrose
 */
public class GreatFrame extends javax.swing.JFrame {

    /**
     * Creates new form GreatFrame
     */
    public GreatFrame() {
        initComponents();
        lock_icon.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        warningDialog = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        aboutDialog = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        messageTextField3 = new javax.swing.JTextField();
        shiftKeyA2 = new javax.swing.JTextField();
        TierInUse = new javax.swing.JLabel();
        shiftLabel1 = new javax.swing.JLabel();
        decryptButton3 = new javax.swing.JButton();
        encryptButton3 = new javax.swing.JButton();
        greatMessageField = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        decryptMessage1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultField1 = new javax.swing.JTextPane();
        shiftKeyB2 = new javax.swing.JTextField();
        shiftLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        lock_icon = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        decryptMessage3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultField3 = new javax.swing.JTextPane();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        warningDialog.setMinimumSize(new java.awt.Dimension(468, 282));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Warning! The affine equation requires that Shift Key 'A'\nbe a factor of 64, because the program uses a custom \nalphabet of 63 characters. See below for more details.");
        jScrollPane3.setViewportView(jTextArea1);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cryptomight_v2_proj/warning2.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(0, 37, Short.MAX_VALUE))
        );

        jButton1.setText("Got it");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(jButton1)
                .addContainerGap(196, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        javax.swing.GroupLayout warningDialogLayout = new javax.swing.GroupLayout(warningDialog.getContentPane());
        warningDialog.getContentPane().setLayout(warningDialogLayout);
        warningDialogLayout.setHorizontalGroup(
            warningDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(warningDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(warningDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(warningDialogLayout.createSequentialGroup()
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 2, Short.MAX_VALUE)))
        );
        warningDialogLayout.setVerticalGroup(
            warningDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, warningDialogLayout.createSequentialGroup()
                .addContainerGap(241, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(warningDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(warningDialogLayout.createSequentialGroup()
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 54, Short.MAX_VALUE)))
        );

        aboutDialog.setMinimumSize(new java.awt.Dimension(400, 240));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("                              Cryptomite - Nov' 2016\n\nCreated for Dr. Elledge's MAT243 Class at ASU Polytechnic.\n\nDev Team:\nGarren Rose\nChris Hidalgo\nAmy Bonillas\nGerardo Pedraza");
        jScrollPane4.setViewportView(jTextArea2);

        jButton2.setText("Back to Encrypting");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
        aboutDialog.getContentPane().setLayout(aboutDialogLayout);
        aboutDialogLayout.setHorizontalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        aboutDialogLayout.setVerticalGroup(
            aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutDialogLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jPanel3.setPreferredSize(new java.awt.Dimension(621, 270));

        messageTextField3.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        messageTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageTextField3ActionPerformed(evt);
            }
        });

        shiftKeyA2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        shiftKeyA2.setText("32");
        shiftKeyA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftKeyA2ActionPerformed(evt);
            }
        });

        TierInUse.setFont(new java.awt.Font("Futura", 1, 24)); // NOI18N
        TierInUse.setForeground(javax.swing.UIManager.getDefaults().getColor("NbBrushedMetal.lightShadow"));
        TierInUse.setText("Affine + Great Cipher");

        shiftLabel1.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        shiftLabel1.setText("Shift Key 'A':");

        decryptButton3.setText("Decrypt");
        decryptButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButton3ActionPerformed(evt);
            }
        });

        encryptButton3.setText("Encrypt");
        encryptButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButton3ActionPerformed(evt);
            }
        });

        greatMessageField.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        greatMessageField.setText("Message to Process:");

        decryptMessage1.setBackground(new java.awt.Color(153, 153, 153));
        decryptMessage1.setFont(new java.awt.Font("Krungthep", 1, 18)); // NOI18N
        decryptMessage1.setText("Processed Message:");

        jScrollPane2.setViewportView(resultField1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(decryptMessage1)
                .addContainerGap(392, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 65, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(decryptMessage1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        shiftKeyB2.setFont(new java.awt.Font("Lucida Sans Typewriter", 0, 13)); // NOI18N
        shiftKeyB2.setText("9");
        shiftKeyB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftKeyB2ActionPerformed(evt);
            }
        });

        shiftLabel2.setFont(new java.awt.Font("Krungthep", 0, 13)); // NOI18N
        shiftLabel2.setText("Shift Key 'B':");

        jSeparator2.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(lock_icon)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(lock_icon)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(TierInUse))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jSeparator2)
                                .addGap(176, 176, 176)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(shiftKeyA2)
                            .addComponent(encryptButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shiftLabel2)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(decryptButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(shiftKeyB2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(45, 45, 45)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(greatMessageField)
                    .addComponent(messageTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shiftLabel1))
                .addGap(47, 47, 47))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(TierInUse, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(greatMessageField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shiftLabel1)
                    .addComponent(shiftLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shiftKeyA2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(shiftKeyB2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(decryptButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(encryptButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        decryptMessage3.setBackground(new java.awt.Color(153, 153, 153));
        decryptMessage3.setFont(new java.awt.Font("Krungthep", 1, 18)); // NOI18N
        decryptMessage3.setText("Processed Message:");

        jScrollPane1.setViewportView(resultField3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(decryptMessage3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(decryptMessage3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));

        jMenuBar1.setSize(new java.awt.Dimension(86, 28));

        jMenu1.setText("Encryption Method");
        jMenu1.setBorderPainted(true);
        jMenu1.add(jSeparator3);

        jMenuItem1.setText("Caesar Cipher");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Affine Cipher");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageTextField3ActionPerformed

    private void shiftKeyA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftKeyA2ActionPerformed
        warningDialog.setVisible(true);
    }//GEN-LAST:event_shiftKeyA2ActionPerformed

    private void decryptButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButton3ActionPerformed
        String greatNums = messageTextField3.getText();
        int affineKey = Integer.parseInt(shiftKeyA2.getText());
        int shiftKey = Integer.parseInt(shiftKeyB2.getText());
        // TO DO: Scale this baby up to include all ASCII
        final String ALPHABET = " 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_-+=[]{}\\|;:\'\",.<>/?`~";
        String[] greatList = greatNums.split(" ");
		
		int[] greatIntegers = new int[greatList.length];
		
		for(int i = 0; i < greatIntegers.length; i++)
		{
			greatIntegers[i] = Integer.parseInt(greatList[i]);
		}                           
                
                String affineText = "";
		String trickyNull = "";
		int totalRows = 95; // One for each alphabet character
		int totalCols = 6; // One for each substitution possibilitiy
		
		int greatArray[][] = 
			{
				{1, 453, 810, 699, 636, 170},
				{1, 891, 812, 586, 322, 982},
				{1, 398, 73, 742, 419, 150},
				{1, 881, 288, 309, 940, 495},
				{1, 46, 339, 94, 221, 455},
				{1, 247, 4, 607, 676, 858},
				{1, 155, 31, 834, 734, 408},
				{1, 571, 551, 651, 23, 631},
				{1, 803, 38, 576, 592, 173},
				{1, 794, 648, 137, 878, 306},
				{1, 967, 298, 877, 99, 211},
				{1, 655, 33, 901, 427, 820},
				{1, 145, 855, 898, 313, 836},
				{1, 164, 865, 579, 714, 846},
				{1, 377, 685, 605, 755, 159},
				{1, 988, 980, 162, 13, 56},
				{1, 709, 422, 908, 712, 416},
				{1, 861, 231, 42, 425, 198},
				{1, 282, 213, 216, 792, 678},
				{1, 949, 346, 53, 232, 70},
				{1, 389, 483, 920, 674, 386},
				{1, 485, 430, 2, 958, 664},
				{1, 402, 269, 838, 620, 704},
				{1, 543, 273, 502, 378, 624},
				{1, 129, 373, 511, 135, 327},
				{1, 509, 684, 30, 756, 264},
				{1, 696, 968, 254, 48, 844},
				{1, 387, 371, 589, 530, 301},
				{1, 570, 625, 380, 477, 731},
				{1, 481, 764, 407, 492, 100},
				{1, 456, 851, 954, 203, 560},
				{1, 470, 66, 182, 638, 404},
				{1, 575, 765, 390, 563, 683},
				{1, 962, 827, 501, 711, 265},
				{1, 127, 340, 736, 522, 175},
				{1, 741, 351, 131, 658, 807},
				{1, 926, 34, 572, 52, 537},
				{1, 568, 939, 637, 363, 238},
				{1, 312, 116, 176, 583, 598},
				{1, 320, 78, 391, 977, 874},
				{1, 790, 310, 376, 650, 517},
				{1, 986, 966, 782, 941, 983},
				{1, 459, 697, 862, 80, 666},
				{1, 628, 255, 108, 876, 166},
				{1, 368, 225, 95, 210, 584},
				{1, 444, 700, 167, 646, 913},
				{1, 916, 43, 333, 536, 578},
				{1, 979, 553, 811, 88, 112},
				{1, 829, 798, 12, 934, 739},
				{1, 629, 590, 29, 98, 738},
				{1, 667, 945, 991, 905, 660},
				{1, 609, 957, 87, 24, 675},
				{1, 163, 601, 644, 548, 746},
				{1, 121, 565, 751, 128, 826},
				{1, 653, 971, 728, 278, 204},
				{1, 580, 852, 914, 766, 452},
				{1, 692, 693, 39, 974, 20},
				{1, 985, 185, 451, 3, 9},
				{1, 923, 433, 652, 434, 703},
				{1, 850, 405, 54, 879, 970},
				{1, 69, 519, 102, 144, 984},
				{1, 206, 740, 657, 458, 713},
				{1, 526, 385, 224, 184, 171}, //row 63 in 1-63, 62 in 0-62
                                {1, 464, 403, 249, 426, 706},//64
                                {1, 627, 556, 473, 222, 84},//65
                                {1, 35, 230, 316, 424, 600},//66
                                {1, 944, 603, 649, 126, 81},//67
                                {1, 107, 143, 356, 401, 469},//68
                                {1, 994, 995, 996, 997, 998},//START MIXUMUPS HERE 69
                                {1, 951, 952, 953, 955, 956},//70
                                {1, 642, 643, 92, 645, 647},//71
                                {1, 610, 611, 612, 613, 614},//72
                                {1, 992, 705, 577, 113, 96},//73
                                {1, 97, 199, 361, 423, 559},//74
                                {1, 656, 717, 521, 329, 187},//75
                                {1, 189, 197, 51, 32, 588},//76
                                {1, 763, 682, 111, 335, 412},
                                {1, 396, 330, 169, 140, 75},//78
                                {1, 331, 103, 19, 900, 857},
                                {1, 907, 635, 615, 302, 179},//80
                                {1, 797, 669, 186, 142, 139},
                                {1, 285, 234, 89, 130, 843},
                                {1, 904, 505, 535, 147, 106},//83
                                {1, 854, 727, 15, 28, 299},
                                {1, 293, 65, 393, 400, 918},
                                {1, 987, 906, 582, 448, 104},
                                {1, 300, 114, 287, 59, 735},
                                {1, 325, 468, 608, 779, 297},
                                {1, 188, 193, 152, 659, 793},
                                {1, 937, 719, 619, 771, 11},//90
                                {1, 158, 411, 632, 445, 240},
                                {1, 207, 6, 413, 241, 824},
                                {1, 524, 317, 146, 304, 334},
                                {1, 239, 508, 963, 60, 919},//94
                                {1, 141, 488, 120, 27, 74}//95
                        };
		
		for (int i = 0; i < greatList.length; i++)
		{
			for (int row = 0; row < totalRows; row++)
			{
				for (int col = 0; col < totalCols; col++)
				{
					if (greatArray[row][col] == greatIntegers[i])
					{
						char affineChar = ALPHABET.charAt(row);
						affineText += affineChar;
					}
					else 
					{ 
						affineText += trickyNull;
					}
				}
			}
		}
					
        String plainMessage = "";
        int modulus = ALPHABET.length(); 
        int modSolved = 0;
        int inverse = 0;

        while(true){
                modSolved = ((affineKey * inverse)) % modulus;
                        if(modSolved == 1)
                                        break;
                        inverse++;
                }

        for (int i = 0; i < affineText.length(); i++)
                {
                        int charPosition = ALPHABET.indexOf(affineText.charAt(i));
                        int tempValue = (( inverse * (charPosition - shiftKey))); 
                        int keyValue = tempValue % modulus;
                        if (keyValue < 0){
                                keyValue = ALPHABET.length() + keyValue;// This if statement catches any negative 
                                }
                        char replaceValue = ALPHABET.charAt(keyValue);
                        plainMessage += replaceValue;
                        }
                this.resultField3.setText(plainMessage);
                
               lock_icon.setVisible(false);
               
    }//GEN-LAST:event_decryptButton3ActionPerformed

    private void encryptButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButton3ActionPerformed
        
        String plainText = messageTextField3.getText();
        int affineKey = Integer.parseInt(shiftKeyA2.getText());
        int shiftKey = Integer.parseInt(shiftKeyB2.getText());
        // TO DO: Scale this baby up to include all ASCII
        final String ALPHABET = " 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_-+=[]{}\\|;:\'\",.<>/?`~";                                                                                 // need to. I know that we can
        int dynam_modulus = ALPHABET.length();
        String cipherText = ""; // null
        for (int i = 0; i < plainText.length(); i++) // iterates/increments
        {	
                int charPosition = ALPHABET.indexOf(plainText.charAt(i));
                int keyVal = ((affineKey * charPosition) + shiftKey) % dynam_modulus;
                char replaceVal = ALPHABET.charAt(keyVal);
                cipherText += replaceVal;       
        }       

	
        //Start of Great Cipher
        int[] nullInjectionArray = {101, 352, 63};
        int totalCols = 6;
        String greatMessage = "";
        int greatArray[][] = 
			{
				{1, 453, 810, 699, 636, 170},
				{1, 891, 812, 586, 322, 982},
				{1, 398, 73, 742, 419, 150},
				{1, 881, 288, 309, 940, 495},
				{1, 46, 339, 94, 221, 455},
				{1, 247, 4, 607, 676, 858},
				{1, 155, 31, 834, 734, 408},
				{1, 571, 551, 651, 23, 631},
				{1, 803, 38, 576, 592, 173},
				{1, 794, 648, 137, 878, 306},
				{1, 967, 298, 877, 99, 211},
				{1, 655, 33, 901, 427, 820},
				{1, 145, 855, 898, 313, 836},
				{1, 164, 865, 579, 714, 846},
				{1, 377, 685, 605, 755, 159},
				{1, 988, 980, 162, 13, 56},
				{1, 709, 422, 908, 712, 416},
				{1, 861, 231, 42, 425, 198},
				{1, 282, 213, 216, 792, 678},
				{1, 949, 346, 53, 232, 70},
				{1, 389, 483, 920, 674, 386},
				{1, 485, 430, 2, 958, 664},
				{1, 402, 269, 838, 620, 704},
				{1, 543, 273, 502, 378, 624},
				{1, 129, 373, 511, 135, 327},
				{1, 509, 684, 30, 756, 264},
				{1, 696, 968, 254, 48, 844},
				{1, 387, 371, 589, 530, 301},
				{1, 570, 625, 380, 477, 731},
				{1, 481, 764, 407, 492, 100},
				{1, 456, 851, 954, 203, 560},
				{1, 470, 66, 182, 638, 404},
				{1, 575, 765, 390, 563, 683},
				{1, 962, 827, 501, 711, 265},
				{1, 127, 340, 736, 522, 175},
				{1, 741, 351, 131, 658, 807},
				{1, 926, 34, 572, 52, 537},
				{1, 568, 939, 637, 363, 238},
				{1, 312, 116, 176, 583, 598},
				{1, 320, 78, 391, 977, 874},
				{1, 790, 310, 376, 650, 517},
				{1, 986, 966, 782, 941, 983},
				{1, 459, 697, 862, 80, 666},
				{1, 628, 255, 108, 876, 166},
				{1, 368, 225, 95, 210, 584},
				{1, 444, 700, 167, 646, 913},
				{1, 916, 43, 333, 536, 578},
				{1, 979, 553, 811, 88, 112},
				{1, 829, 798, 12, 934, 739},
				{1, 629, 590, 29, 98, 738},
				{1, 667, 945, 991, 905, 660},
				{1, 609, 957, 87, 24, 675},
				{1, 163, 601, 644, 548, 746},
				{1, 121, 565, 751, 128, 826},
				{1, 653, 971, 728, 278, 204},
				{1, 580, 852, 914, 766, 452},
				{1, 692, 693, 39, 974, 20},
				{1, 985, 185, 451, 3, 9},
				{1, 923, 433, 652, 434, 703},
				{1, 850, 405, 54, 879, 970},
				{1, 69, 519, 102, 144, 984},
				{1, 206, 740, 657, 458, 713},
				{1, 526, 385, 224, 184, 171}, //row 63 in 1-63, 62 in 0-62
                                {1, 464, 403, 249, 426, 706},
                                {1, 627, 556, 473, 222, 84},//65
                                {1, 35, 230, 316, 424, 600},
                                {1, 944, 603, 649, 126, 81},
                                {1, 107, 143, 356, 401, 469},
                                {1, 994, 995, 996, 997, 998},
                                {1, 951, 952, 953, 955, 956},//70
                                {1, 642, 643, 92, 645, 647},
                                {1, 610, 611, 612, 613, 614},
                                {1, 992, 705, 577, 113, 96},
                                {1, 97, 199, 361, 423, 559},
                                {1, 656, 717, 521, 329, 187},//75
                                {1, 189, 197, 51, 32, 588},
                                {1, 763, 682, 111, 335, 412},
                                {1, 396, 330, 169, 140, 75},
                                {1, 331, 103, 19, 900, 857},
                                {1, 907, 635, 615, 302, 179},//80
                                {1, 797, 669, 186, 142, 139},
                                {1, 285, 234, 89, 130, 843},
                                {1, 904, 505, 535, 147, 106},
                                {1, 854, 727, 15, 28, 299},
                                {1, 293, 65, 393, 400, 918},
                                {1, 987, 906, 582, 448, 104},
                                {1, 300, 114, 287, 59, 735},
                                {1, 325, 468, 608, 779, 297},
                                {1, 188, 193, 152, 659, 793},
                                {1, 937, 719, 619, 771, 11},//90
                                {1, 158, 411, 632, 445, 240},
                                {1, 207, 6, 413, 241, 824},
                                {1, 524, 317, 146, 304, 334},
                                {1, 239, 508, 963, 60, 919},
                                {1, 141, 488, 120, 27, 74}//95
                                
                        
                        };

                int rowIterator = 1;
                int nullPosition = 0; 

        for(int i = 0; i < (cipherText.length() ) ; i++) {
                int row = ALPHABET.indexOf(cipherText.charAt(i));
                int col = greatArray[row][0];
                int greatValue = greatArray[row][col];
                String nextEntry = (String.valueOf(greatValue) + " ");

                if (greatValue % 4 == 2)
                {
                                greatMessage += (String.valueOf(nullInjectionArray[nullPosition]) + " ");
                                nullPosition++;

                                if (nullPosition == 2)
                                {
                                        nullPosition = 0;
                                }

                }
                greatMessage += nextEntry;


                if (rowIterator < totalCols - 1) 
                {
                        rowIterator++;
                        greatArray[row][0] = rowIterator;
                }	
                else 
                { 

                        rowIterator = 1;
                        greatArray[row][0] = rowIterator;
                } 
            
        this.resultField3.setText(greatMessage);
        
        lock_icon.setVisible(true);
    }
    }//GEN-LAST:event_encryptButton3ActionPerformed

    private void shiftKeyB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftKeyB2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shiftKeyB2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.dispose();
        CaesarFrame s = new CaesarFrame();
        s.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        this.dispose();
        AffineFrame s = new AffineFrame();
        s.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        warningDialog.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        aboutDialog.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_jMenu2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GreatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GreatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GreatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GreatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GreatFrame().setVisible(true);
            }
        });
       }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TierInUse;
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JButton decryptButton3;
    private javax.swing.JLabel decryptMessage1;
    private javax.swing.JLabel decryptMessage3;
    private javax.swing.JButton encryptButton3;
    private javax.swing.JLabel greatMessageField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lock_icon;
    private javax.swing.JTextField messageTextField3;
    private javax.swing.JTextPane resultField1;
    private javax.swing.JTextPane resultField3;
    private javax.swing.JTextField shiftKeyA2;
    private javax.swing.JTextField shiftKeyB2;
    private javax.swing.JLabel shiftLabel1;
    private javax.swing.JLabel shiftLabel2;
    private javax.swing.JDialog warningDialog;
    // End of variables declaration//GEN-END:variables
}
